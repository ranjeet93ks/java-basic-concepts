package com.basic.concepts.basics;

public class CustomObjectClassExample {
	private int id;
	private String name;

	public static void main(String[] args) {
		CustomObjectClassExample ex = new CustomObjectClassExample();
		System.out.println(ex.hashCode());// 961

		CustomObjectClassExample ex1 = new CustomObjectClassExample(1, "Ranjeet");
		System.out.println(ex1.hashCode());// -1652235383

		CustomObjectClassExample ex2 = new CustomObjectClassExample(1, "Sonam");
		System.out.println(ex2.hashCode());// 80068862

		System.out.println(ex.equals(ex1));// false
		System.out.println(ex1.equals(ex2));// true

	}

	@Override
	public String toString() {
		return "CustomObjectClassExample [id=" + id + "]";
	}

	// A hash code is an integer value that gets generated by the hashing algorithm.
	// Hash code is associated with each object in Java and is a distinct value.
	// It converts an object's internal address to an integer through an algorithm.
	// It is not the memory address, it is the integer representation of the memory
	// address.

	@SuppressWarnings("unused")
	@Override
	public int hashCode() {
		// here we will consider both id and name
		Object[] a = { id, name };

		if (a == null) {
			return 0;
		}

		int result = 1;

		for (Object element : a)
			result = 31 * result + (element == null ? 0 : element.hashCode());

		return result;

	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		CustomObjectClassExample other = (CustomObjectClassExample) obj;
		return id == other.id; // no contribution of name field
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public CustomObjectClassExample() {
		super();
	}

	public CustomObjectClassExample(int id) {
		super();
		this.id = id;
	}

	public CustomObjectClassExample(String name) {
		super();
		this.name = name;
	}

	public CustomObjectClassExample(int id, String name) {
		super();
		this.id = id;
		this.name = name;
	}

}
